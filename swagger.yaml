openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: /api/v1
paths:
  /admin/email-layout/{key}:
    get:
      summary: Get email layout by key
      operationId: getEmailLayoutByKey
      tags:
        - admin-notification
      parameters:
        - name: key
          in: path
          description: The key of the email layout to retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Email layout object returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailLayoutResponseModel"
        "404":
          description: Email layout not found
    put:
      summary: Create a new email layout
      operationId: createEmailLayout
      tags:
        - admin-notification
      parameters:
        - name: key
          in: path
          description: The key of the email layout to save
          required: true
          schema:
            type: string
      requestBody:
        description: Email layout object that needs to be added to the db
        required: true
        content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailLayoutRequestModel"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailLayoutResponseModel"
  /admin/email-layouts:
    get:
        summary: Get all email layouts
        operationId: getEmailLayouts
        tags:
            - admin-notification
        parameters:
          - in: query
            name: page
            required: false
            schema:
              type: integer
              default: 0
            description: The page number for pagination (zero-based)
          - name: size
            in: query
            description: How many items to return at one time (max 100)
            required: false
            schema:
              type: integer
              format: int32
              minimum: 1
              maximum: 200
              default: 50
          - in: query
            name: sortOrder
            description: Determines direction for resulting sorting.
            required: false
            schema:
              type: string
              enum:
                - ASC
                - DESC
              default: DESC
          - in: query
            name: sortBy
            description: Field to sort users by. Email is chosen by default.
            required: false
            schema:
              type: string
              enum:
                - key
                - version
                - status
                - name
        responses:
            "200":
                description: Email layout object returned
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/EmailLayoutPageDTO"
            "401":
              description: "You are unauthorized to make this request"
            "404":
                description: Email layout not found
components:
  schemas:
    EmailLayoutRequestModel:
      type: object
      required:
        - name
        - description
        - content
        - inputs
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        inputs:
          type: array
          items:
            type: string
    EmailLayoutResponseModel:
      type: object
      required:
        - id
        - key
        - version
        - status
        - name
        - description
        - content
        - inputs
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
        version:
          type: integer
          format: int32
        status:
          type: string
        name:
          type: string
        description:
          type: string
        content:
          type: string
        inputs:
          type: array
          items:
            type: string
        createdBy:
          type: string
    SortOrder:
      type: string
      default: ASC
      pattern: ^(ASC|DESC)$
    SortEmailLayoutBy:
      type: string
      default: email
      pattern: ^(id|externalId|email|createdAt|displayName)$
    EmailLayoutPageDTO:
      type: object
      required:
        - users
        - pagingMetadata
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/EmailLayoutResponseModel'
        pagingMetadata:
          $ref: "#/components/schemas/PagingMetadata"
    PagingMetadata:
      description: Paging metadata in accordance with https://datatracker.ietf.org/doc/html/rfc8977
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
          minimum: 0
        pageSize:
          type: integer
          minimum: 0
          maximum: 200
        pageNumber:
          type: integer
          minimum: 0
        nextPage:
          type: string
